spring:
    profiles.active: daily
    datasource:
        name: default
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://common101.my.2dfire-daily.com:3306/hera?useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true&allowMultiQueries=true
        username: twodfire
        password: 123456
        druid:
                  initial-size: 10
                  max-active: 20       #最大连接池数量
                  min-idle: 2              #最小连接池数量
                  max-wait: 5000 #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
                  validation-query: select 1                #用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
                  validation-query-timeout: 1                #单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
                  test-on-borrow:        false        #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
                  test-on-return:        false        #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
                  test-while-idle:        true        #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
                  time-between-eviction-runs-millis: 60000        #1分钟（1.0.14）        有两个含义：
                                                  #1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
                  min-evictable-idle-time-millis:  300000      #30分钟（1.0.14）        连接保持空闲而不被驱逐的最长时间
                  log-abandoned: true
                  connection-init-sqls: set names utf8mb4


server:
  context-path: /hera
  port: 8080

clean:
   path: ${server.context-path}
#hera全局配置
hera:
   default-worker-group-id : 1 #默认worker的host组id
   preemption-master-group-id : 1  #抢占master的host组id
   exclude-file: jar

logging:
  config: classpath:logback-spring.xml
  path: /opt/logs/spring-boot

---
spring:
  profiles: dev
---

spring:
  profiles: daily
---
spring:
  profiles: pre
  datasource:
      url: jdbc:mysql://master1401.my.2dfire-inc.com:3306/report_revaluation?useUnicode=true&amp;characterEncoding=UTF-8
      username: hera
      password: hera@552208





---
spring:
  profiles: publish
  datasource:
      url: jdbc:mysql://master1401.my.2dfire-inc.com:3306/report_revaluation?useUnicode=true&amp;characterEncoding=UTF-8
      username: hera
      password: hera@552208

